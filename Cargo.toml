[package]
name = "rustradio"
version = "0.10.1"
edition = "2021"
license = "MIT"
authors = ["Thomas Habets <thomas@habets.se>"]
readme = "README.md"
repository = "https://github.com/ThomasHabets/rustradio"
description = "Software defined radio library"
keywords = ["SDR", "radio"]

# See more keys and their definitions at
# https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = "1.0.75"
log = "0.4.20"
num-complex = "0.4.4"
rustfft = "6.2.0"
tempfile = "3.8.0"
rtlsdr = {version = "0.1.4", optional=true}
fast-math = {version = "0.1.1", optional=true}
libc = "0.2.149"
soapysdr = {version = "0.4.0", optional=true}
serde_json = "1.0.113"
serde = {version = "1.0.196", features = ["derive"]}
cpal = { version = "0.15.3", features = ["jack"], optional=true }
errno = "0.3.9"
rustradio_macros = { version = "0.10.1", path = "rustradio_macros" }
rayon = "1.10.0"
itertools = "0.14.0"
# System fftw has been many times faster for me than not. Maybe because the C
# code is not compiled with the right options, like -march=native?
[dependencies.fftw]
version = "0.8.0"
default-features = false
features = ["system"]
optional = true

[dev-dependencies]
clap = { version = "4", features = ["derive"] }
stderrlog = "0.6.0"
ctrlc = "3.4.1"
ratatui = { version = "0.29.0", features = ["all-widgets"]}
crossterm = "0.28.1"
sha2 = "0.10.8"
# apt install libgoogle-perftools-dev google-perftools
# Uncomment the PROFILER stuff in examples/ax25-1200-rx.rs
# google-pprof --lines target/release/examples/ax25-1200-rx my-prof.prof
# gperftools = "0.2.0"

[lib]
name = "rustradio"
path = "src/lib.rs"

[features]
simd = []
rtlsdr = ["dep:rtlsdr"]
soapysdr = ["dep:soapysdr"]
fast-math = ["dep:fast-math"]
audio = ["dep:cpal"]
fftw = ["dep:fftw"]

[[example]]
name = "bell202"
required-features = ["soapysdr"]

[[example]]
name = "tone"
required-features = ["audio"]

[profile.release]
# debug = true

# Disabled overflow checks help speed by like 8%.
overflow-checks = true

# LTO speeds up by like 15%.
lto = true

# They say that lower should make for faster code, but empirically it seems that
# it only makes things worse.
# codegen-units = 1

[profile.release.package."*"]
overflow-checks = true

# vim: textwidth=80

[lints.clippy]
missing-safety-doc = "warn"
undocumented-unsafe-blocks = "warn"
